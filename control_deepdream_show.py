import os
import random

layers = [
    "inception_3a/1x1",
    "inception_3a/3x3_reduce",
    "inception_3a/3x3",
    "inception_3a/5x5_reduce",
    "inception_3a/5x5",
    "inception_3a/pool",
    "inception_3a/pool_proj",
    "inception_3a/output",
    "inception_3a/output_inception_3a/output_0_split_0",
    "inception_3a/output_inception_3a/output_0_split_1",
    "inception_3a/output_inception_3a/output_0_split_2",
    "inception_3a/output_inception_3a/output_0_split_3",
    "inception_3b/1x1",
    "inception_3b/3x3_reduce",
    "inception_3b/3x3",
    "inception_3b/5x5_reduce",
    "inception_3b/5x5",
    "inception_3b/pool",
    "inception_3b/pool_proj",
    "inception_3b/output",
    "inception_4a/1x1",
    "inception_4a/3x3_reduce",
    "inception_4a/3x3",
    "inception_4a/5x5_reduce",
    "inception_4a/5x5",
    "inception_4a/pool",
    "inception_4a/pool_proj",
    "inception_4a/output",
    "inception_4a/output_inception_4a/output_0_split_0",
    "inception_4a/output_inception_4a/output_0_split_1",
    "inception_4a/output_inception_4a/output_0_split_2",
    "inception_4a/output_inception_4a/output_0_split_3",
    "inception_4b/1x1",
    "inception_4b/3x3_reduce",
    "inception_4b/3x3",
    "inception_4b/5x5_reduce",
    "inception_4b/5x5",
    "inception_4b/pool",
    "inception_4b/pool_proj",
    "inception_4b/output",
    "inception_4b/output_inception_4b/output_0_split_0",
    "inception_4b/output_inception_4b/output_0_split_1",
    "inception_4b/output_inception_4b/output_0_split_2",
    "inception_4b/output_inception_4b/output_0_split_3",
    "inception_4c/1x1",
    "inception_4c/3x3_reduce",
    "inception_4c/3x3",
    "inception_4c/5x5_reduce",
    "inception_4c/5x5",
    "inception_4c/pool",
    "inception_4c/pool_proj",
    "inception_4c/output",
    "inception_4c/output_inception_4c/output_0_split_0",
    "inception_4c/output_inception_4c/output_0_split_1",
    "inception_4c/output_inception_4c/output_0_split_2",
    "inception_4c/output_inception_4c/output_0_split_3",
    "inception_4d/1x1",
    "inception_4d/3x3_reduce",
    "inception_4d/3x3",
    "inception_4d/5x5_reduce",
    "inception_4d/5x5",
    "inception_4d/pool",
    "inception_4d/pool_proj",
    "inception_4d/output",
    "inception_4d/output_inception_4d/output_0_split_0",
    "inception_4d/output_inception_4d/output_0_split_1",
    "inception_4d/output_inception_4d/output_0_split_2",
    "inception_4d/output_inception_4d/output_0_split_3",
    "inception_4e/1x1",
    "inception_4e/3x3_reduce",
    "inception_4e/3x3",
    "inception_4e/5x5_reduce",
    "inception_4e/5x5",
    "inception_4e/pool",
    "inception_4e/pool_proj",
    "inception_4e/output",
    "inception_5a/1x1",
    "inception_5a/3x3_reduce",
    "inception_5a/3x3",
    "inception_5a/5x5_reduce",
    "inception_5a/5x5",
    "inception_5a/pool",
    "inception_5a/pool_proj",
    "inception_5a/output",
    "inception_5a/output_inception_5a/output_0_split_0",
    "inception_5a/output_inception_5a/output_0_split_1",
    "inception_5a/output_inception_5a/output_0_split_2",
    "inception_5a/output_inception_5a/output_0_split_3",
    "inception_5b/1x1",
    "inception_5b/3x3_reduce",
    "inception_5b/3x3",
    "inception_5b/5x5_reduce",
    "inception_5b/5x5",
    "inception_5b/pool",
    "inception_5b/pool_proj",
    "inception_5b/output"
]

layer = random.choice(layers)
image_name = "photo.jpg"
deep_iter = 200
zoom = 0.05

while True:
	os.system("python deepdream.py --model_path ~/caffe/models/bvlc_googlenet/ --model bvlc_googlenet.caffemodel --layer {} --image {} --is_gpu y --zoom {} --deep_iter {} --octave_n 2 --iter 5".format(layer, image_name, zoom, deep_iter))
    layer = random.choice(layers)
